vec3 palette( float t) {
    vec3 a = vec3(0.468, 0.528, 0.500);
    vec3 b = vec3(0.968, 0.928, 0.900);
    vec3 c = vec3(0.468, 0.368, 0.500);
    vec3 d = vec3(0.168, 0.128, 0.100);
    
    return  a + b * cos ( 6.28318 * (c*t+d));
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    vec2 uv = fragCoord/iResolution.xy * 2.0 - 1.0;
       uv.x *= iResolution.x/iResolution.y; // makes sure the images we create seem like they are on a square canvas even when they are actually on a rectangle
    vec2 uv0 = uv;
    vec3 finalColor = vec3(0.0);
    
    for (float i = 0.0; i < 3.0; i++) {
    
    uv = fract(uv * 2.0) - 0.5;
    float d = length(uv)* log(length (uv0));
    
    vec3 col = palette(length(uv0) + iTime * i * 0.3);
    d = cos(d * 5.0 * i + iTime)/7.0;
    d = abs(d);
    d = pow(0.025 / d, 2.0);
    finalColor += d * d * col;
    
    }
    
    fragColor = vec4(finalColor, 1.0);
}
